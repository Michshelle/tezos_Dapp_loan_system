{"ast":null,"code":"var _jsxFileName = \"/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/Menu.js\";\nimport React, { useState } from \"react\";\n\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\n\nconst mutezToTez = mutez => Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst Menu = ({\n  coffeeMenu,\n  tokenInstance,\n  userAddress,\n  setBalance,\n  Tezos\n}) => {\n  const [txStatus, setTxStatus] = useState(null);\n  const [txHash, setTxHash] = useState(undefined);\n\n  const burnToken = async userAddress => {\n    try {\n      const op = await tokenInstance.methods.burn(userAddress);\n      console.log(op);\n\n      if (op.status === \"applied\") {\n        setTxStatus(\"applied\");\n        setTxHash(op.hash);\n      } else {\n        setTxStatus(\"error\");\n        throw Error(\"Transation not applied\");\n      }\n\n      await op.confirmation(30);\n\n      if (op.includedInBlock !== Infinity) {\n        setTxStatus(\"included\");\n        const newBalance = await Tezos.tz.getBalance(userAddress);\n        setBalance(newBalance);\n      } else {\n        throw Error(\"Transation not included in block\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (txStatus === null) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"app-subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Please choose your coffee:\"), coffeeMenu.map(coffee => React.createElement(\"div\", {\n      className: \"card coffee_selection\",\n      key: coffee.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, upperFirst(coffee.name), \" (\\uA729 \", mutezToTez(coffee.price), \")\"), userAddress && React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-footer-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"action\",\n      onClick: () => buyCoffee(coffee.name, coffee.price),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Buy\"))))));\n  } else if (txStatus === \"applied\") {\n    return React.createElement(\"div\", {\n      className: \"message is-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Waiting for confirmation\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Your transaction is being processed, please wait.\"), React.createElement(\"p\", {\n      className: \"coffee-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"coffee-cup.png\",\n      alt: \"coffee-cup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Transaction number: \", txHash)));\n  } else if (txStatus === \"included\") {\n    return React.createElement(\"div\", {\n      className: \"message is-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Transaction confirmed!\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Enjoy your coffee!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-info\",\n      onClick: () => setTxStatus(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Buy a new coffee\"))));\n  } else if (txStatus === \"error\") {\n    return React.createElement(\"div\", {\n      className: \"message is-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Error\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"An error has occurred, please try again.\")));\n  }\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/Menu.js"],"names":["React","useState","upperFirst","str","toUpperCase","slice","mutezToTez","mutez","Math","round","parseInt","Number","EPSILON","Menu","coffeeMenu","tokenInstance","userAddress","setBalance","Tezos","txStatus","setTxStatus","txHash","setTxHash","undefined","burnToken","op","methods","burn","console","log","status","hash","Error","confirmation","includedInBlock","Infinity","newBalance","tz","getBalance","error","map","coffee","name","price","buyCoffee"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\n\nconst mutezToTez = mutez =>\n  Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst Menu = ({\n  coffeeMenu,\n  tokenInstance,\n  userAddress,\n  setBalance,\n  Tezos\n}) => {\n  const [txStatus, setTxStatus] = useState(null);\n  const [txHash, setTxHash] = useState(undefined);\n\n  const burnToken = async (userAddress) => {\n    try {\n      const op = await tokenInstance.methods\n        .burn(userAddress)\n      console.log(op);\n      if (op.status === \"applied\") {\n        setTxStatus(\"applied\");\n        setTxHash(op.hash);\n      } else {\n        setTxStatus(\"error\");\n        throw Error(\"Transation not applied\");\n      }\n\n      await op.confirmation(30);\n      if (op.includedInBlock !== Infinity) {\n        setTxStatus(\"included\");\n        const newBalance = await Tezos.tz.getBalance(userAddress);\n        setBalance(newBalance);\n      } else {\n        throw Error(\"Transation not included in block\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (txStatus === null) {\n\n    return (\n      <>\n        <div className=\"app-subtitle\">Please choose your coffee:</div>\n        {coffeeMenu.map(coffee => (\n          <div className=\"card coffee_selection\" key={coffee.name}>\n            <div className=\"card-content\">\n              {upperFirst(coffee.name)} (ꜩ {mutezToTez(coffee.price)})\n            </div>\n            {userAddress && (\n              <div className=\"card-footer\">\n                <p className=\"card-footer-item\">\n                  <span\n                    className=\"action\"\n                    onClick={() => buyCoffee(coffee.name, coffee.price)}\n                  >\n                    Buy\n                  </span>\n                </p>\n              </div>\n            )}\n          </div>\n        ))}\n      </>\n    );\n  } else if (txStatus === \"applied\") {\n    return (\n      <div className=\"message is-info\">\n        <div className=\"message-header\">\n          <p>Waiting for confirmation</p>\n        </div>\n        <div className=\"message-body\">\n          <p>Your transaction is being processed, please wait.</p>\n          <p className=\"coffee-loader\">\n            <img src=\"coffee-cup.png\" alt=\"coffee-cup\" />\n          </p>\n          <p>Transaction number: {txHash}</p>\n        </div>\n      </div>\n    );\n  } else if (txStatus === \"included\") {\n    return (\n      <div className=\"message is-success\">\n        <div className=\"message-header\">\n          <p>Transaction confirmed!</p>\n        </div>\n        <div className=\"message-body\">\n          <p>Enjoy your coffee!</p>\n          <br />\n          <p>\n            <button\n              className=\"button is-info\"\n              onClick={() => setTxStatus(null)}\n            >\n              Buy a new coffee\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  } else if (txStatus === \"error\") {\n    return (\n      <div className=\"message is-danger\">\n        <div className=\"message-header\">\n          <p>Error</p>\n        </div>\n        <div className=\"message-body\">\n          <p>An error has occurred, please try again.</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}