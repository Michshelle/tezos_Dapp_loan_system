{"ast":null,"code":"var _jsxFileName = \"/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport Menu from \"./Menu\";\nimport xtz from \"./xtz_price\";\nimport \"./App.css\";\nimport \"./bulma.css\";\n/* PUT HERE THE CONTRACT ADDRESS FOR YOUR OWN SANDBOX! */\n\nconst KT_ledger = \"KT1RigSYegqvkCkEoHMfgXY4XLgknZufrFEa\";\nconst KT_token = \"KT1GxBkvP5aiAtBu9MwAWBgxRpaCeLCcBfNj\";\n\nconst shortenAddress = addr => addr.slice(0, 6) + \"...\" + addr.slice(addr.length - 6);\n\nconst mutezToTez = mutez => Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst App = () => {\n  const [tokenInstance, setTokenInstance] = useState(undefined);\n  const [ledgerInstance, setLedgerInstance] = useState(undefined);\n  const [ledgerInfo, setLedgerInfo] = useState(undefined);\n  const [userAddress, setUserAddress] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [isOwner, setIsOwner] = useState(false);\n  const [contractBalance, setContractBalance] = useState(0);\n  const tezbridge = window.tezbridge;\n\n  const initWallet = async () => {\n    try {\n      // sets rpc host\n      const rpc = await tezbridge.request({\n        method: \"set_host\",\n        host: \"http://localhost:8732\"\n      }); // gets user's address\n\n      const _address = await tezbridge.request({\n        method: \"get_source\"\n      });\n\n      setUserAddress(_address); // gets user's balance\n\n      const _balance = await Tezos.tz.getBalance(_address);\n\n      setBalance(_balance);\n      const storage = await tokenInstance.storage();\n\n      if (storage.owner === _address) {\n        setIsOwner(true);\n      }\n    } catch (error) {\n      console.log(\"error fetching the address or balance:\", error);\n    }\n  };\n\n  const mint = async () => {\n    // sends withdrawal request\n    const op = await tokenInstance.methods.mint([[30000]]).send(); // waits for confirmation\n\n    await op.confirmation(30); // if confirmed\n\n    if (op.includedInBlock !== Infinity) {\n      const newBalance = await Tezos.tz.getBalance(userAddress);\n      setBalance(newBalance);\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // sets RPC\n      Tezos.setProvider({\n        rpc: \"http://localhost:8732\",\n        signer: new TezBridgeSigner()\n      }); // fetches contract storage\n\n      const tokenContract = await Tezos.contract.at(KT_token);\n      setTokenInstance(tokenContract);\n      const ledgerContract = await Tezos.contract.at(KT_ledger);\n      setLedgerInstance(ledgerContract);\n      const ledgerStorage = await ledgerContract.storage(); // creates token contract info\n\n      let ledgerInfos = [ledgerStorage.debtor, ledgerStorage.totalCredit];\n      setLedgerInfo(ledgerInfos);\n    })();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, balance === undefined ? React.createElement(\"button\", {\n    className: \"button is-info is-light is-small\",\n    onClick: initWallet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Connect your wallet\") : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"balance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uA729 \", balance.toNumber() / 1000000), React.createElement(\"div\", {\n    className: \"field is-grouped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-success is-light is-small\",\n    onClick: async () => {\n      setUserAddress(undefined);\n      setBalance(undefined);\n      setIsOwner(undefined);\n      await initWallet();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, shortenAddress(userAddress))), isOwner && React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"//textbox for number for mint\", React.createElement(\"button\", {\n    className: \"button is-warning is-light is-small\",\n    onClick: mint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Mint \\uA729 \", mutezToTez(contractBalance)))))), React.createElement(\"div\", {\n    className: \"app-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Flexible Loans\"), React.createElement(\"div\", {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"coffee-maker.png\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), ledgerInfo.length === 0 ? \"Loading the ledger info...\" : React.createElement(Menu, {\n    ledgerInfo: ledgerInfo,\n    tokenInstance: tokenInstance,\n    ledgerInstance: ledgerInstance,\n    userAddress: userAddress,\n    setBalance: setBalance,\n    Tezos: Tezos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/App.js"],"names":["React","useState","useEffect","Tezos","TezBridgeSigner","Menu","xtz","KT_ledger","KT_token","shortenAddress","addr","slice","length","mutezToTez","mutez","Math","round","parseInt","Number","EPSILON","App","tokenInstance","setTokenInstance","undefined","ledgerInstance","setLedgerInstance","ledgerInfo","setLedgerInfo","userAddress","setUserAddress","balance","setBalance","isOwner","setIsOwner","contractBalance","setContractBalance","tezbridge","window","initWallet","rpc","request","method","host","_address","_balance","tz","getBalance","storage","owner","error","console","log","mint","op","methods","send","confirmation","includedInBlock","Infinity","newBalance","setProvider","signer","tokenContract","contract","at","ledgerContract","ledgerStorage","ledgerInfos","debtor","totalCredit","toNumber"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport Menu from \"./Menu\";\nimport xtz from \"./xtz_price\";\nimport \"./App.css\";\nimport \"./bulma.css\";\n\n/* PUT HERE THE CONTRACT ADDRESS FOR YOUR OWN SANDBOX! */\nconst KT_ledger = \"KT1RigSYegqvkCkEoHMfgXY4XLgknZufrFEa\"\nconst KT_token = \"KT1GxBkvP5aiAtBu9MwAWBgxRpaCeLCcBfNj\"\n\nconst shortenAddress = addr =>\n  addr.slice(0, 6) + \"...\" + addr.slice(addr.length - 6);\n\nconst mutezToTez = mutez =>\n  Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst App = () => {\n  const [tokenInstance, setTokenInstance] = useState(undefined);\n  const [ledgerInstance, setLedgerInstance] = useState(undefined);\n  const [ledgerInfo, setLedgerInfo] = useState(undefined);\n  const [userAddress, setUserAddress] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [isOwner, setIsOwner] = useState(false);\n  const [contractBalance, setContractBalance] = useState(0);\n  const tezbridge = window.tezbridge;\n\n  const initWallet = async () => {\n    try {\n      // sets rpc host\n      const rpc = await tezbridge.request({\n        method: \"set_host\",\n        host: \"http://localhost:8732\"\n      });\n      // gets user's address\n      const _address = await tezbridge.request({ method: \"get_source\" });\n      setUserAddress(_address);\n      // gets user's balance\n      const _balance = await Tezos.tz.getBalance(_address);\n      setBalance(_balance);\n      const storage = await tokenInstance.storage();\n      if (storage.owner === _address) {\n        setIsOwner(true);\n      }\n    } catch (error) {\n      console.log(\"error fetching the address or balance:\", error);\n    }\n  };\n  const mint = async () => {\n    // sends withdrawal request\n    const op = await tokenInstance.methods.mint([[30000]]).send();\n    // waits for confirmation\n    await op.confirmation(30);\n    // if confirmed\n    if (op.includedInBlock !== Infinity) {\n      const newBalance = await Tezos.tz.getBalance(userAddress);\n      setBalance(newBalance);\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // sets RPC\n      Tezos.setProvider({\n        rpc: \"http://localhost:8732\",\n        signer: new TezBridgeSigner()\n      });\n      // fetches contract storage\n      const tokenContract = await Tezos.contract.at(KT_token);\n      setTokenInstance(tokenContract);\n      const ledgerContract = await Tezos.contract.at(KT_ledger);\n      setLedgerInstance(ledgerContract);\n      const ledgerStorage = await ledgerContract.storage();\n      // creates token contract info\n      let ledgerInfos = [ledgerStorage.debtor,ledgerStorage.totalCredit];\n      setLedgerInfo(ledgerInfos);\n    })();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"wallet\">\n        {balance === undefined ? (\n          <button\n            className=\"button is-info is-light is-small\"\n            onClick={initWallet}\n          >\n            Connect your wallet\n          </button>\n        ) : (\n          <>\n            <span className=\"balance\">ꜩ {balance.toNumber() / 1000000}</span>\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <button\n                  className=\"button is-success is-light is-small\"\n                  onClick={async () => {\n                    setUserAddress(undefined);\n                    setBalance(undefined);\n                    setIsOwner(undefined);\n                    await initWallet();\n                  }}\n                >\n                  {shortenAddress(userAddress)}\n                </button>\n              </p>\n              {isOwner && (\n                <p className=\"control\">\n                  //textbox for number for mint\n                  <button\n                    className=\"button is-warning is-light is-small\"\n                    onClick={mint}\n                  >\n                    Mint ꜩ {mutezToTez(contractBalance)}\n                  </button>\n                </p>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"app-title\">Flexible Loans</div>\n      <div className=\"logo\">\n        <img src=\"coffee-maker.png\" alt=\"logo\" />\n      </div>\n      {ledgerInfo.length === 0 ? (\n        \"Loading the ledger info...\"\n      ) : (\n        <Menu\n          ledgerInfo={ledgerInfo}\n          tokenInstance={tokenInstance}\n          ledgerInstance={ledgerInstance}\n          userAddress={userAddress}\n          setBalance={setBalance}\n          Tezos={Tezos}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}