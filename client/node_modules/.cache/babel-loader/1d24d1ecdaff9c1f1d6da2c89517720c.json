{"ast":null,"code":"var _jsxFileName = \"/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/Menu.js\";\nimport React, { useState } from \"react\";\nimport xtz from \"./xtz_price\";\n\nconst {\n  JSDOM\n} = require(\"jsdom\");\n\nconst {\n  window\n} = new JSDOM(\"\");\n\nconst $ = require(\"jquery\")(window);\n\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\n\nconst mutezToTez = mutez => Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst Menu = ({\n  tokenInstance,\n  ledgerInstance,\n  ledgerInfo,\n  userAddress,\n  setBalance,\n  Tezos\n}) => {\n  const [txStatus, setTxStatus] = useState(null);\n  const [txHash, setTxHash] = useState(undefined);\n\n  const debtTokenTransfer = async (userAddress, new_owner, start_date) => {\n    try {} catch (error) {\n      console.log(error);\n    }\n  };\n\n  const burn = async userAddress => {\n    try {\n      const op = await tokenInstance.methods.burn(userAddress);\n      console.log(op);\n\n      if (op.status === \"applied\") {\n        setTxStatus(\"applied\");\n        setTxHash(op.hash);\n      } else {\n        setTxStatus(\"error\");\n        throw Error(\"Transation not applied\");\n      }\n\n      await op.confirmation(30);\n\n      if (op.includedInBlock !== Infinity) {\n        setTxStatus(\"included\");\n        const newBalance = await Tezos.tz.getBalance(userAddress);\n        setBalance(newBalance);\n      } else {\n        throw Error(\"Transation not included in block\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (txStatus === null) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"app-subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Choose the action you want to perform:\"), React.createElement(\"div\", {\n      className: \"card coffee_selection\",\n      key: userAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-footer-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"action\",\n      onClick: () => burn(userAddress),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Burn\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"New creditor: \", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"newCreditorAccount\",\n      value: \"Please input correct address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input-group date\",\n      id: \"datetimepicker1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"glyphicon glyphicon-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))))), React.createElement(\"script\", {\n      type: \"text/javascript\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"$(function () \", $('#datetimepicker1').datetimepicker(), \");\")))), React.createElement(\"span\", {\n      className: \"action\",\n      onClick: () => debtTokenTransfer(userAddress, document.getElementById(\"newCreditorAccount\"), $('#datetimepicker1').data('date')),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Transfer\")))));\n  } else if (txStatus === \"applied\") {\n    return React.createElement(\"div\", {\n      className: \"message is-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Waiting for confirmation\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Your transaction is being processed, please wait.\"), React.createElement(\"p\", {\n      className: \"coffee-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"coffee-cup.png\",\n      alt: \"coffee-cup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Transaction number: \", txHash)));\n  } else if (txStatus === \"included\") {\n    return React.createElement(\"div\", {\n      className: \"message is-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Transaction confirmed!\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Xtz has been sent to your account\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-info\",\n      onClick: () => setTxStatus(null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Xtz redeem\"))));\n  } else if (txStatus === \"error\") {\n    return React.createElement(\"div\", {\n      className: \"message is-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Error\")), React.createElement(\"div\", {\n      className: \"message-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"An error has occurred, please try again.\")));\n  }\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/Menu.js"],"names":["React","useState","xtz","JSDOM","require","window","$","upperFirst","str","toUpperCase","slice","mutezToTez","mutez","Math","round","parseInt","Number","EPSILON","Menu","tokenInstance","ledgerInstance","ledgerInfo","userAddress","setBalance","Tezos","txStatus","setTxStatus","txHash","setTxHash","undefined","debtTokenTransfer","new_owner","start_date","error","console","log","burn","op","methods","status","hash","Error","confirmation","includedInBlock","Infinity","newBalance","tz","getBalance","datetimepicker","document","getElementById","data"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport xtz from \"./xtz_price\";\nconst { JSDOM } = require( \"jsdom\" );\nconst { window } = new JSDOM( \"\" );\nconst $ = require( \"jquery\" )( window );\n\nconst upperFirst = str => str[0].toUpperCase() + str.slice(1);\n\nconst mutezToTez = mutez =>\n  Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst Menu = ({\n  tokenInstance,\n  ledgerInstance,\n  ledgerInfo,\n  userAddress,\n  setBalance,\n  Tezos\n}) => {\n  const [txStatus, setTxStatus] = useState(null);\n  const [txHash, setTxHash] = useState(undefined);\n\n  const debtTokenTransfer = async (userAddress,new_owner,start_date) => {\n    try {\n\n\n\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  const burn = async (userAddress) => {\n    try {\n\n      const op = await tokenInstance.methods\n        .burn(userAddress)\n      console.log(op);\n      if (op.status === \"applied\") {\n        setTxStatus(\"applied\");\n        setTxHash(op.hash);\n      } else {\n        setTxStatus(\"error\");\n        throw Error(\"Transation not applied\");\n      }\n\n      await op.confirmation(30);\n      if (op.includedInBlock !== Infinity) {\n        setTxStatus(\"included\");\n        const newBalance = await Tezos.tz.getBalance(userAddress);\n        setBalance(newBalance);\n      } else {\n        throw Error(\"Transation not included in block\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (txStatus === null) {\n\n    return (\n      <>\n        <div className=\"app-subtitle\">Choose the action you want to perform:</div>\n          <div className=\"card coffee_selection\" key={userAddress}>\n              <div className=\"card-footer\">\n                <p className=\"card-footer-item\">\n                  <span\n                    className=\"action\"\n                    onClick={() => burn(userAddress)}\n                  >\n                    Burn\n                  </span>\n                  <p>\n                  New creditor: <input type=\"text\" id=\"newCreditorAccount\" value=\"Please input correct address\"></input>\n                  </p>\n                  <p>\n                  <div class=\"container\">\n                     <div class=\"row\">\n                         <div class='col-sm-6'>\n                             <div class=\"form-group\">\n                                 <div class='input-group date' id='datetimepicker1'>\n                                     <input type='text' class=\"form-control\" />\n                                     <span class=\"input-group-addon\">\n                                         <span class=\"glyphicon glyphicon-calendar\"></span>\n                                     </span>\n                                 </div>\n                             </div>\n                         </div>\n                         <script type=\"text/javascript\">\n                             $(function () {\n                                 $('#datetimepicker1').datetimepicker()\n                             });\n                         </script>\n                     </div>\n                 </div>                    \n                  </p>\n                  <span\n                    className=\"action\"\n                    onClick={() => debtTokenTransfer(userAddress,document.getElementById(\"newCreditorAccount\"),$('#datetimepicker1').data('date'))}\n                  >\n                    Transfer\n                  </span>                  \n\n                </p>\n              </div>\n          </div>\n      </>\n    );\n  } else if (txStatus === \"applied\") {\n    return (\n      <div className=\"message is-info\">\n        <div className=\"message-header\">\n          <p>Waiting for confirmation</p>\n        </div>\n        <div className=\"message-body\">\n          <p>Your transaction is being processed, please wait.</p>\n          <p className=\"coffee-loader\">\n            <img src=\"coffee-cup.png\" alt=\"coffee-cup\" />\n          </p>\n          <p>Transaction number: {txHash}</p>\n        </div>\n      </div>\n    );\n  } else if (txStatus === \"included\") {\n    return (\n      <div className=\"message is-success\">\n        <div className=\"message-header\">\n          <p>Transaction confirmed!</p>\n        </div>\n        <div className=\"message-body\">\n          <p>Xtz has been sent to your account</p>\n          <br />\n          <p>\n            <button\n              className=\"button is-info\"\n              onClick={() => setTxStatus(null)}\n            >\n              Xtz redeem\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  } else if (txStatus === \"error\") {\n    return (\n      <div className=\"message is-danger\">\n        <div className=\"message-header\">\n          <p>Error</p>\n        </div>\n        <div className=\"message-body\">\n          <p>An error has occurred, please try again.</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}