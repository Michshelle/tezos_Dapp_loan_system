{"ast":null,"code":"var _jsxFileName = \"/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport Menu from \"./Menu\";\nimport xtz from \"./xtz_price\";\nimport \"./App.css\";\nimport \"./bulma.css\";\n/* PUT HERE THE CONTRACT ADDRESS FOR YOUR OWN SANDBOX! */\n\nconst KT_ledger = \"KT1RigSYegqvkCkEoHMfgXY4XLgknZufrFEa\";\nconst KT_token = \"KT1GxBkvP5aiAtBu9MwAWBgxRpaCeLCcBfNj\";\n\nconst shortenAddress = addr => addr.slice(0, 6) + \"...\" + addr.slice(addr.length - 6);\n\nconst mutezToTez = mutez => Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst App = () => {\n  const [tokenInstance, setTokenInstance] = useState(undefined);\n  const [ledgerInfo, setLedgerInfo] = useState(undefined);\n  const [userAddress, setUserAddress] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [isOwner, setIsOwner] = useState(false);\n  const [contractBalance, setContractBalance] = useState(0);\n  const tezbridge = window.tezbridge;\n\n  const initWallet = async () => {\n    try {\n      // sets rpc host\n      const rpc = await tezbridge.request({\n        method: \"set_host\",\n        host: \"http://localhost:8732\"\n      }); // gets user's address\n\n      const _address = await tezbridge.request({\n        method: \"get_source\"\n      });\n\n      setUserAddress(_address); // gets user's balance\n\n      const _balance = await Tezos.tz.getBalance(_address);\n\n      setBalance(_balance);\n      const storage = await tokenInstance.storage();\n\n      if (storage.owner === _address) {\n        setIsOwner(true);\n      }\n    } catch (error) {\n      console.log(\"error fetching the address or balance:\", error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // sets RPC\n      Tezos.setProvider({\n        rpc: \"http://localhost:8732\",\n        signer: new TezBridgeSigner()\n      }); // fetches contract storage\n\n      const ledgerContract = await Tezos.contract.at(KT_ledger);\n      setLedgerInstance(ledgerContract);\n      const ledgerStorage = await ledgerContract.storage(); // creates token contract info\n\n      let ledgerInfos = [ledgerStorage.debtor, ledgerStorage.totalCredit];\n      setLedgerInfo(ledgerInfos);\n    })();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, balance === undefined ? React.createElement(\"button\", {\n    className: \"button is-info is-light is-small\",\n    onClick: initWallet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Connect your wallet\") : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"balance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\\uA729 \", balance.toNumber() / 1000000), React.createElement(\"div\", {\n    className: \"field is-grouped\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button is-success is-light is-small\",\n    onClick: async () => {\n      setUserAddress(undefined);\n      setBalance(undefined);\n      setIsOwner(undefined);\n      await initWallet();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, shortenAddress(userAddress))), isOwner && React.createElement(\"p\", {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"//textbox for number for mint\", React.createElement(\"button\", {\n    className: \"button is-warning is-light is-small\",\n    onClick: mint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Mint \\uA729 \", mutezToTez(contractBalance)))))), React.createElement(\"div\", {\n    className: \"app-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Flexible Loans\"), React.createElement(\"div\", {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"coffee-maker.png\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), coffeeMenu.length === 0 ? \"Loading the menu...\" : React.createElement(Menu, {\n    ledgerInfo: ledgerInfo,\n    ledgerMenu: ledgerMenu,\n    tokenInstance: tokenInstance,\n    ledgerInstance: ledgerInstance,\n    userAddress: userAddress,\n    setBalance: setBalance,\n    Tezos: Tezos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shengyisong/Documents/githubs/tezos-react-tutorial/client/src/App.js"],"names":["React","useState","useEffect","Tezos","TezBridgeSigner","Menu","xtz","KT_ledger","KT_token","shortenAddress","addr","slice","length","mutezToTez","mutez","Math","round","parseInt","Number","EPSILON","App","tokenInstance","setTokenInstance","undefined","ledgerInfo","setLedgerInfo","userAddress","setUserAddress","balance","setBalance","isOwner","setIsOwner","contractBalance","setContractBalance","tezbridge","window","initWallet","rpc","request","method","host","_address","_balance","tz","getBalance","storage","owner","error","console","log","setProvider","signer","ledgerContract","contract","at","setLedgerInstance","ledgerStorage","ledgerInfos","debtor","totalCredit","toNumber","mint","coffeeMenu","ledgerMenu","ledgerInstance"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tezos } from \"@taquito/taquito\";\nimport { TezBridgeSigner } from \"@taquito/tezbridge-signer\";\nimport Menu from \"./Menu\";\nimport xtz from \"./xtz_price\";\nimport \"./App.css\";\nimport \"./bulma.css\";\n\n/* PUT HERE THE CONTRACT ADDRESS FOR YOUR OWN SANDBOX! */\nconst KT_ledger = \"KT1RigSYegqvkCkEoHMfgXY4XLgknZufrFEa\"\nconst KT_token = \"KT1GxBkvP5aiAtBu9MwAWBgxRpaCeLCcBfNj\"\n\nconst shortenAddress = addr =>\n  addr.slice(0, 6) + \"...\" + addr.slice(addr.length - 6);\n\nconst mutezToTez = mutez =>\n  Math.round((parseInt(mutez) / 1000000 + Number.EPSILON) * 100) / 100;\n\nconst App = () => {\n  const [tokenInstance, setTokenInstance] = useState(undefined);\n  const [ledgerInfo, setLedgerInfo] = useState(undefined);\n  const [userAddress, setUserAddress] = useState(undefined);\n  const [balance, setBalance] = useState(undefined);\n  const [isOwner, setIsOwner] = useState(false);\n  const [contractBalance, setContractBalance] = useState(0);\n  const tezbridge = window.tezbridge;\n\n  const initWallet = async () => {\n    try {\n      // sets rpc host\n      const rpc = await tezbridge.request({\n        method: \"set_host\",\n        host: \"http://localhost:8732\"\n      });\n      // gets user's address\n      const _address = await tezbridge.request({ method: \"get_source\" });\n      setUserAddress(_address);\n      // gets user's balance\n      const _balance = await Tezos.tz.getBalance(_address);\n      setBalance(_balance);\n      const storage = await tokenInstance.storage();\n      if (storage.owner === _address) {\n        setIsOwner(true);\n      }\n    } catch (error) {\n      console.log(\"error fetching the address or balance:\", error);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // sets RPC\n      Tezos.setProvider({\n        rpc: \"http://localhost:8732\",\n        signer: new TezBridgeSigner()\n      });\n      // fetches contract storage\n      const ledgerContract = await Tezos.contract.at(KT_ledger);\n      setLedgerInstance(ledgerContract);\n      const ledgerStorage = await ledgerContract.storage();\n      // creates token contract info\n      let ledgerInfos = [ledgerStorage.debtor,ledgerStorage.totalCredit];\n      setLedgerInfo(ledgerInfos);\n    })();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"wallet\">\n        {balance === undefined ? (\n          <button\n            className=\"button is-info is-light is-small\"\n            onClick={initWallet}\n          >\n            Connect your wallet\n          </button>\n        ) : (\n          <>\n            <span className=\"balance\">ꜩ {balance.toNumber() / 1000000}</span>\n            <div className=\"field is-grouped\">\n              <p className=\"control\">\n                <button\n                  className=\"button is-success is-light is-small\"\n                  onClick={async () => {\n                    setUserAddress(undefined);\n                    setBalance(undefined);\n                    setIsOwner(undefined);\n                    await initWallet();\n                  }}\n                >\n                  {shortenAddress(userAddress)}\n                </button>\n              </p>\n              {isOwner && (\n                <p className=\"control\">\n                  //textbox for number for mint\n                  <button\n                    className=\"button is-warning is-light is-small\"\n                    onClick={mint}\n                  >\n                    Mint ꜩ {mutezToTez(contractBalance)}\n                  </button>\n                </p>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"app-title\">Flexible Loans</div>\n      <div className=\"logo\">\n        <img src=\"coffee-maker.png\" alt=\"logo\" />\n      </div>\n      {coffeeMenu.length === 0 ? (\n        \"Loading the menu...\"\n      ) : (\n        <Menu\n          ledgerInfo={ledgerInfo}\n          ledgerMenu={ledgerMenu}\n          tokenInstance={tokenInstance}\n          ledgerInstance={ledgerInstance}\n          userAddress={userAddress}\n          setBalance={setBalance}\n          Tezos={Tezos}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}